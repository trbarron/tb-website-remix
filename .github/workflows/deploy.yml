name: üöÄ Deploy

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      run_lint:
        description: 'Run ESLint check'
        required: true
        type: boolean
        default: false
      run_typecheck:
        description: 'Run TypeScript check'
        required: true
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload to S3
        run: |
          aws s3 sync posts/ s3://${{ secrets.AWS_BUCKET_NAME }}/posts/

  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    if: github.event.inputs.run_lint == 'true'
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì• Install deps
        run: npm install

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    if: github.event.inputs.run_typecheck == 'true'
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì• Install deps
        run: npm install

      - name: üîé Type check
        run: npm run typecheck --if-present

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: x64

      - name: üëÄ Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: üì• Install deps
        run: |
          rm -rf node_modules
          npm cache clean --force
          npm install
          npm install -g @architect/architect
          npm install -g esbuild
          npm rebuild

      - name: üèó Build
        run: |
          npm run build
          echo "Build directory contents:"
          ls -la public/build/

      - name: üõ† Prepare Server
        run: |
          mkdir -p server
          mkdir -p build
          
          # Create minimal package.json for server
          echo '{
            "type": "module",
            "main": "index.mjs",
            "dependencies": {
              "@architect/functions": "^5.0.0"
            }
          }' > server/package.json
          
          # Install only production dependencies in server
          cd server
          npm i --omit=dev --no-package-lock
          cd ..
                  
      - name: üì¶ Optimize Server Bundle
        run: |
          npx esbuild server/index.mjs \
            --bundle \
            --platform=node \
            --target=node20 \
            --format=esm \
            --external:@architect/functions \
            --external:node:* \
            --outfile=build/index.mjs
  
            # Enhanced debug output
            echo "Checking bundle contents:"
            echo "Bundle size: $(ls -lh build/index.mjs | awk '{print $5}')"
            echo "React imports check:"
            grep -i "from 'react'" build/index.mjs || echo "No React imports found"
            echo "Module type check:"
            head -n 5 build/index.mjs
          
      - name: üîç Debug Build Output
        run: |
          echo "Current directory structure:"
          tree -L 3 || ls -R
          
          echo "\nRemix build config:"
          cat remix.config.js
          
          echo "\nFinal server package.json:"
          cat server/package.json

      - name: üöÄ Production Deploy
        if: github.ref == 'refs/heads/master'
        run: |
          npx arc deploy --production --prune --verbose
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}